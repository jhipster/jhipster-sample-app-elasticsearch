{
  "name": "jhipster-elasticsearch-sample-application",
  "version": "0.0.1-SNAPSHOT",
  "private": true,
  "description": "Description for jhipsterElasticsearchSampleApplication",
  "license": "UNLICENSED",
  "scripts": {
    "app:start": "./mvnw",
    "backend:build-cache": "./mvnw dependency:go-offline",
    "backend:debug": "./mvnw -Dspring-boot.run.jvmArguments=\"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8000\"",
    "backend:doc:test": "./mvnw -ntp javadoc:javadoc --batch-mode",
    "backend:info": "./mvnw -ntp enforcer:display-info --batch-mode",
    "backend:nohttp:test": "./mvnw -ntp checkstyle:check --batch-mode",
    "backend:start": "./mvnw -Dskip.installnodenpm -Dskip.npm",
    "backend:unit:test": "./mvnw -ntp -Dskip.installnodenpm -Dskip.npm verify --batch-mode -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.io.github.jhipster.sample=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF",
    "build": "npm run webapp:prod --",
    "build-watch": "concurrently 'npm run webapp:build:dev -- --watch' npm:backend:start",
    "ci:backend:test": "npm run backend:info && npm run backend:doc:test && npm run backend:nohttp:test && npm run backend:unit:test -- -P$npm_package_config_default_environment",
    "ci:e2e:package": "npm run java:$npm_package_config_packaging:$npm_package_config_default_environment -- -Pe2e -Denforcer.skip=true",
    "ci:e2e:prepare": "npm run ci:e2e:prepare:docker",
    "ci:e2e:prepare:docker": "npm run docker:db:up && npm run docker:others:up && docker ps -a",
    "ci:e2e:run": "concurrently -k -s first \"npm run ci:e2e:server:start\" \"npm run e2e:headless\"",
    "preci:e2e:server:start": "npm run docker:db:await --if-present && npm run docker:others:await --if-present",
    "ci:e2e:server:start": "java -jar target/e2e.$npm_package_config_packaging --spring.profiles.active=$npm_package_config_default_environment -Dlogging.level.ROOT=OFF -Dlogging.level.org.zalando=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.io.github.jhipster.sample=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF --logging.level.org.springframework.web=ERROR",
    "ci:e2e:teardown": "npm run ci:e2e:teardown:docker",
    "ci:e2e:teardown:docker": "npm run docker:db:down --if-present && npm run docker:others:down && docker ps -a",
    "ci:frontend:build": "npm run webapp:build:$npm_package_config_default_environment",
    "ci:frontend:test": "npm run ci:frontend:build && npm test",
    "ci:server:await": "echo \"Waiting for server at port $npm_package_config_backend_port to start\" && wait-on http-get://localhost:$npm_package_config_backend_port/management/health && echo \"Server at port $npm_package_config_backend_port started\"",
    "clean-www": "rimraf target/classes/static/app/{src,target/}",
    "cleanup": "rimraf target/classes/static/",
    "docker:app:up": "docker-compose -f src/main/docker/app.yml up -d",
    "docker:db:down": "docker-compose -f src/main/docker/mysql.yml down -v --remove-orphans",
    "docker:db:up": "docker-compose -f src/main/docker/mysql.yml up -d",
    "docker:elasticsearch:down": "docker-compose -f src/main/docker/elasticsearch.yml down -v --remove-orphans",
    "docker:elasticsearch:up": "docker-compose -f src/main/docker/elasticsearch.yml up -d",
    "docker:others:await": "echo \"Waiting for Elasticsearch to start\" && wait-on \"http-get://localhost:9200/_cluster/health?wait_for_status=green&timeout=60s\" && echo \"Elasticsearch started\"",
    "docker:others:down": "npm run docker:elasticsearch:down",
    "predocker:others:up": "",
    "docker:others:up": "npm run docker:elasticsearch:up",
    "e2e": "npm run e2e:protractor --",
    "e2e:dev": "concurrently -k -s first \"./mvnw\" \"npm run e2e\"",
    "e2e:devserver": "concurrently -k -s first \"npm run backend:start\" \"npm start\" \"wait-on http-get://localhost:9000 && npm run e2e:headless -- -c baseUrl=http://localhost:9000\"",
    "pree2e:headless": "npm run ci:server:await",
    "e2e:headless": "npm run e2e:protractor:headless --",
    "e2e:protractor": "protractor src/test/javascript/protractor.conf.js",
    "e2e:protractor:headless": "npm run e2e:protractor --",
    "e2e:update-webdriver": "webdriver-manager update --gecko false",
    "postinstall": "npm run e2e:update-webdriver",
    "java:docker": "./mvnw -ntp verify -DskipTests -Pprod jib:dockerBuild",
    "java:docker:arm64": "npm run java:docker -- -Djib-maven-plugin.architecture=arm64",
    "java:docker:dev": "npm run java:docker -- -Pdev,webapp",
    "java:docker:prod": "npm run java:docker -- -Pprod",
    "java:jar": "./mvnw -ntp verify -DskipTests --batch-mode",
    "java:jar:dev": "npm run java:jar -- -Pdev,webapp",
    "java:jar:prod": "npm run java:jar -- -Pprod",
    "java:war": "./mvnw -ntp verify -DskipTests --batch-mode -Pwar",
    "java:war:dev": "npm run java:war -- -Pdev,webapp",
    "java:war:prod": "npm run java:war -- -Pprod",
    "jest": "jest --coverage --logHeapUsage --maxWorkers=2 --config jest.conf.js",
    "lint": "eslint . --ext .js,.ts",
    "lint:fix": "npm run lint -- --fix",
    "prepare": "husky install",
    "prettier:check": "prettier --check \"{,src/**/,webpack/}*.{md,json,yml,html,cjs,mjs,js,ts,tsx,css,scss,java}\"",
    "prettier:format": "prettier --write \"{,src/**/,webpack/}*.{md,json,yml,html,cjs,mjs,js,ts,tsx,css,scss,java}\"",
    "serve": "npm run start --",
    "start": "ng serve --hmr",
    "start-tls": "npm run webapp:dev-ssl",
    "pretest": "npm run lint",
    "test": "ng test --coverage --log-heap-usage -w=2",
    "test:watch": "npm run test -- --watch",
    "watch": "concurrently npm:start npm:backend:start",
    "webapp:build": "npm run clean-www && npm run webapp:build:dev",
    "webapp:build:dev": "ng build --configuration development",
    "webapp:build:prod": "ng build --configuration production",
    "webapp:dev": "ng serve",
    "webapp:dev-ssl": "ng serve --ssl",
    "webapp:dev-verbose": "ng serve --verbose",
    "webapp:prod": "npm run clean-www && npm run webapp:build:prod",
    "webapp:test": "npm run test --"
  },
  "config": {
    "backend_port": 8080,
    "default_environment": "prod",
    "packaging": "jar"
  },
  "dependencies": {
    "@angular/common": "13.1.1",
    "@angular/compiler": "13.1.1",
    "@angular/core": "13.1.1",
    "@angular/forms": "13.1.1",
    "@angular/localize": "13.1.1",
    "@angular/platform-browser": "13.1.1",
    "@angular/platform-browser-dynamic": "13.1.1",
    "@angular/router": "13.1.1",
    "@fortawesome/angular-fontawesome": "0.10.1",
    "@fortawesome/fontawesome-svg-core": "1.2.36",
    "@fortawesome/free-solid-svg-icons": "5.15.4",
    "@ng-bootstrap/ng-bootstrap": "11.0.0",
    "@ngx-translate/core": "14.0.0",
    "@ngx-translate/http-loader": "7.0.0",
    "bootstrap": "4.6.1",
    "dayjs": "1.10.7",
    "ngx-infinite-scroll": "10.0.1",
    "ngx-webstorage": "9.0.0",
    "rxjs": "7.5.1",
    "swagger-ui-dist": "4.1.3",
    "tslib": "2.3.1",
    "zone.js": "0.11.4"
  },
  "devDependencies": {
    "@angular-builders/custom-webpack": "13.0.0",
    "@angular-builders/jest": "13.0.2",
    "@angular-devkit/build-angular": "13.1.2",
    "@angular-eslint/eslint-plugin": "13.0.1",
    "@angular/cli": "13.1.2",
    "@angular/compiler-cli": "13.1.1",
    "@angular/service-worker": "13.1.1",
    "@types/chai": "4.2.14",
    "@types/chai-string": "1.4.2",
    "@types/jest": "27.4.0",
    "@types/mocha": "8.2.0",
    "@types/node": "16.11.17",
    "@types/selenium-webdriver": "4.0.11",
    "@typescript-eslint/eslint-plugin": "5.8.1",
    "@typescript-eslint/parser": "5.8.1",
    "browser-sync": "2.27.7",
    "browser-sync-webpack-plugin": "2.3.0",
    "chai": "4.2.0",
    "chai-as-promised": "7.1.1",
    "chai-string": "1.5.0",
    "concurrently": "6.5.1",
    "copy-webpack-plugin": "10.2.0",
    "eslint": "8.5.0",
    "eslint-config-prettier": "8.3.0",
    "eslint-webpack-plugin": "3.1.1",
    "folder-hash": "4.0.1",
    "generator-jhipster": "7.5.0",
    "husky": "7.0.4",
    "jest": "27.4.5",
    "jest-date-mock": "1.0.8",
    "jest-junit": "13.0.0",
    "jest-preset-angular": "11.0.1",
    "jest-sonar-reporter": "2.0.0",
    "lint-staged": "12.1.4",
    "merge-jsons-webpack-plugin": "2.0.1",
    "mocha": "8.2.1",
    "prettier": "2.5.1",
    "prettier-plugin-java": "1.6.0",
    "prettier-plugin-packagejson": "2.2.15",
    "protractor": "7.0.0",
    "rimraf": "3.0.2",
    "ts-jest": "27.1.2",
    "ts-node": "9.1.1",
    "typescript": "4.5.4",
    "wait-on": "6.0.0",
    "webdriver-manager": "12.1.8",
    "webpack-bundle-analyzer": "4.5.0",
    "webpack-merge": "5.8.0",
    "webpack-notifier": "1.15.0"
  },
  "engines": {
    "node": ">=16.13.1"
  },
  "cacheDirectories": [
    "node_modules"
  ],
  "jestSonar": {
    "reportPath": "target/test-results/jest",
    "reportFile": "TESTS-results-sonar.xml"
  },
  "overrides": {
    "webpack": "5.65.0"
  }
}
